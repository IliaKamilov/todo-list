{"version":3,"sources":["components/CreateTask.tsx","components/TaskItem.tsx","components/TasksList.tsx","App.tsx","serviceWorker.ts","db/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","container","zIndex","flexDirection","borderBottom","height","width","padding","boxSizing","background","color","minWidth","display","alignItems","justifyContent","breakpoints","down","errorBubble","position","bottom","right","paddingRight","fontSize","wrapper","top","left","CreateTask","onSubmit","onCancel","data","classes","inputRef","React","useRef","useState","title","completed","date","Date","state","setState","error","setError","useEffect","current","focus","handleSubmit","db","updateTask","createTask","className","ref","type","value","onKeyUp","e","which","onChange","isExsist","getTask","currentTarget","placeholder","disabled","Boolean","onClick","preventDefault","deleteTask","Delete","Cancel","completeIcon","flex","actions","TaskItem","edit","setEdit","clsx","Edit","overflowY","minHeight","maxHeight","header","fontWeight","list","titleItem","margin","createButton","borderRadius","lineHeight","marginTop","headerCreateButton","cursor","outline","deleteAllButton","textDecoration","TasksList","tasks","filter","filtered","setFiltered","newTask","setNewTask","filters","handleItemsFilter","items","index","indexOf","task","ItemsFilter","map","i","key","handleTasksChange","getTasks","deleteAll","length","Add","boxShadow","overflow","border","userSelect","fixedHeader","body","footer","App","setTasks","ResponsiveHeader","children","smallScreen","useMediaQuery","newState","window","location","hostname","match","LocalDatabase","this","init","sort","a","b","val","find","push","save","update","whiteList","Object","keys","includes","splice","forEach","localStorage","setItem","JSON","stringify","localData","parse","getItem","createMuiTheme","direction","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6c6871a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { \r\n    Cancel as CancelIcon, \r\n    Check as ConfirmIcon,\r\n    Delete as DeleteIcon\r\n} from '@material-ui/icons'\r\nimport { ITask } from '../db'\r\nimport { makeStyles, Theme } from '@material-ui/core'\r\nimport { db } from '..'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        zIndex: 1300,\r\n        flexDirection: 'row',\r\n        borderBottom: '.5px solid #eee',\r\n        height: '45px',\r\n        '& input': {\r\n            width: '100%',\r\n            height: '100%',\r\n            padding: '6px 16px',\r\n            boxSizing: 'border-box'\r\n        },\r\n        '& button': {\r\n            background: '#fff',\r\n            color: '#333',\r\n            minWidth: '45px',\r\n            height: '100%',\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        '& button:disabled': {\r\n            color: '#bbb'\r\n        },\r\n        [theme.breakpoints.down(600)]: {\r\n            height: '65px'\r\n        }\r\n    },\r\n    errorBubble: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n        paddingRight: '16px',\r\n        color: 'red',\r\n        fontSize: '0.875rem'\r\n    },\r\n    wrapper: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        background: 'rgba(0,0,0,.1)',\r\n        zIndex: 1200,\r\n    }\r\n}))\r\n\r\nconst CreateTask: React.FC<{ onSubmit: () => void, onCancel: () => void, data?: ITask }> = ({ onSubmit, onCancel, data }) => {\r\n    const classes = useStyles()\r\n    const inputRef = React.useRef<HTMLInputElement | null>(null)\r\n    const [ state, setState ] = React.useState<ITask>(data || {\r\n        title: '',\r\n        completed: false,\r\n        date: new Date()\r\n    })\r\n    const [ error, setError ] = React.useState<null | string>(null)\r\n\r\n    React.useEffect(() => {\r\n        inputRef.current?.focus()\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const isExsist = db.getTask('title', e.currentTarget.value)\r\n        if (isExsist && isExsist.date !== data?.date) {\r\n            setError('קיימת משימה עם כותרת זהה')\r\n        } else {\r\n            setError(null)\r\n        }\r\n        setState({ ...state, title: e.currentTarget.value })\r\n    }\r\n\r\n    const handleDelete = (e: React.MouseEvent) => {\r\n        e.preventDefault()\r\n        db.deleteTask(state)\r\n        return onSubmit()\r\n    }\r\n\r\n    const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.which === 13) return handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (error) return\r\n        if (data) db.updateTask(data, state)\r\n        else db.createTask({ ...state, date: new Date() })\r\n\r\n        return onSubmit()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n                <input ref={inputRef} type=\"text\" value={state.title} onKeyUp={handleKeyUp} onChange={handleChange} placeholder=\"כותרת\" />\r\n                {\r\n                    error && <div className={classes.errorBubble}>{error}</div>\r\n                }\r\n                {\r\n                    state.title &&\r\n                    <button disabled={!Boolean(state.title) || Boolean(error)} onClick={e => handleSubmit()}>\r\n                        <ConfirmIcon />\r\n                    </button>\r\n                }\r\n                {\r\n                    data \r\n                    ? <button onClick={handleDelete}>\r\n                        <DeleteIcon />\r\n                    </button>\r\n                    : <button onClick={e => onCancel()}>\r\n                        <CancelIcon />\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className={classes.wrapper} onClick={e => onCancel()}></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateTask","import React from 'react'\r\nimport { ITask } from '../db'\r\nimport { makeStyles, Theme } from '@material-ui/core'\r\nimport { \r\n    CheckBoxOutlineBlankOutlined as UncheckedIcon, \r\n    CheckBox as CheckedIcon,\r\n    Edit as EditIcon\r\n} from '@material-ui/icons'\r\nimport clsx from 'clsx'\r\nimport { db } from '..'\r\nimport CreateTask from './CreateTask'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        flexDirection: 'row',\r\n        height: '45px',\r\n        [theme.breakpoints.down(600)]: {\r\n            height: '65px',\r\n        }\r\n    },\r\n    completeIcon: {\r\n        background: 0,\r\n        width: '45px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    title: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        padding: '6px 16px',\r\n        boxSizing: 'border-box'\r\n    },\r\n    actions: {\r\n        flexDirection: 'row',\r\n        height: '100%',\r\n        position: 'relative',\r\n        '& button': {\r\n            background: 0,\r\n            width: '45px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color: '#333'\r\n        }\r\n    }\r\n}))\r\n\r\nconst TaskItem: React.FC<{ data: ITask, onChange: () => void }> = ({ data, onChange }) => {\r\n    const classes = useStyles()\r\n    const [ edit, setEdit ] = React.useState<boolean>(false)\r\n\r\n    const handleCompleteTask = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        db.updateTask(data, { completed: !data.completed })\r\n        return onChange()\r\n    }\r\n\r\n    const handleTaskDeleted = () => {\r\n        setEdit(false)\r\n        return onChange()\r\n    }\r\n\r\n    if (edit) {\r\n        return <CreateTask onSubmit={handleTaskDeleted} onCancel={() => setEdit(false)} data={data} />\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.container, 'taskItem')}>\r\n            <button className={classes.completeIcon} onClick={handleCompleteTask}>\r\n                {\r\n                    data.completed \r\n                    ? <CheckedIcon />\r\n                    : <UncheckedIcon />\r\n                }\r\n            </button>\r\n            <div className={classes.title}>{ data.title }</div>\r\n            <div className={classes.actions}>\r\n                {\r\n                    !data.completed && \r\n                    <button onClick={e => setEdit(true)}>\r\n                        <EditIcon />\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem","import React from 'react'\r\nimport { ITask } from '../db'\r\nimport { makeStyles, Theme } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport CreateTask from './CreateTask'\r\nimport { Add as AddIcon } from '@material-ui/icons'\r\nimport { db } from '..'\r\nimport TaskItem from './TaskItem'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflowY: 'auto',\r\n        minHeight: '445px',\r\n        maxHeight: 'calc(100% -45px)',\r\n    },\r\n    header: {\r\n        zIndex: 1100,\r\n        position: 'relative',\r\n        flexDirection: 'row',\r\n        height: '45px',\r\n        width: '100%',\r\n        borderBottom: '.5px solid #b3d5dc',\r\n        fontSize: '0.875rem',\r\n        background: '#fff',\r\n        '& button': {\r\n            width: '100%',\r\n            padding: '10px 16px',\r\n            boxSizing: 'border-box',\r\n            background: 0,\r\n            color: '#4197a8',\r\n            fontWeight: 400\r\n        },\r\n        '& button.selected': {\r\n            background: '#b3d5dc',\r\n            color: '#3b8897',\r\n            fontWeight: 500\r\n        },\r\n        [theme.breakpoints.down(600)]: {\r\n            height: '65px'\r\n        }\r\n    },\r\n    list: {\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        minHeight: '400px',\r\n        maxHeight: 'calc(400px)',\r\n        [theme.breakpoints.down(600)]: {\r\n            height: '100%',\r\n            maxHeight: '100%'\r\n        },\r\n        '& .taskItem:not(:last-child)': {\r\n            borderBottom: '.5px solid #eee'\r\n        }\r\n    },\r\n    titleItem: {\r\n        padding: '6px 16px',\r\n        margin: '20px auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: '#888'\r\n    },\r\n    createButton: {\r\n        zIndex: 1200,\r\n        background: '#4caf50',\r\n        margin: '6px auto',\r\n        color: '#fff',\r\n        fontSize: '0.875rem',\r\n        padding: '6px 16px',\r\n        borderRadius: '8px',\r\n        fontWeight: 500,\r\n        lineHeight: 2.25,\r\n        [theme.breakpoints.down(600)]: {\r\n            marginTop: '16px'\r\n        }\r\n    },\r\n    headerCreateButton: {\r\n        zIndex: 1200,\r\n        position: 'absolute',\r\n        top: '-45px',\r\n        left: 0,\r\n        height: '45px',\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        padding: '6px 16px',\r\n        boxSizing: 'border-box',\r\n        background: 0,\r\n        color: '#fff',\r\n        cursor: 'pointer',\r\n        outline: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down(600)]: {\r\n            height: '65px',\r\n            position: 'fixed',\r\n            top: 0\r\n        }\r\n    },\r\n    deleteAllButton: {\r\n        color: 'red',\r\n        background: 0,\r\n        margin: '16px auto',\r\n        '&:hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    }\r\n}))\r\n\r\nconst TasksList: React.FC<{ tasks: ITask[], onChange: (newState: ITask[]) => void }> = ({ tasks = [], onChange }) => {\r\n    const classes = useStyles()\r\n    const [ filtered, setFiltered ] = React.useState<{ filter: string, tasks: ITask[] }>({ filter: 'כל המשימות', tasks })\r\n    const [ newTask, setNewTask ] = React.useState<boolean>(false)\r\n\r\n    const filters = [ 'כל המשימות', 'משימות פתוחות', 'משימות שהושלמו' ]\r\n    const handleItemsFilter = (filter: string) => {\r\n        let items: ITask[] = []\r\n        const index = filters.indexOf(filter)\r\n        \r\n        if (index < 0) return\r\n\r\n        switch (index) {\r\n            case 0: items = tasks; break;\r\n            case 1: items = tasks.filter((task: ITask) => !task.completed); break;\r\n            case 2: items = tasks.filter((task: ITask) => task.completed); break;\r\n        }\r\n        \r\n        setFiltered({ ...filtered, filter, tasks: items })\r\n    }\r\n\r\n    const ItemsFilter = () => {\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    filters.map((filter: string, i: number) => (\r\n                        <button className={clsx('', filtered.filter === filter && 'selected')} onClick={e => handleItemsFilter(filter)} key={i}>{filter}</button>\r\n                    ))\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    const handleTasksChange = () => {\r\n        setNewTask(false)\r\n        onChange(db.getTasks())\r\n        handleItemsFilter(filtered.filter)\r\n    }\r\n\r\n    const handleDeleteAll = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        db.deleteAll(filtered.tasks)\r\n        handleTasksChange()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n                {\r\n                    !newTask &&\r\n                    <>\r\n                        <div className={classes.header}>\r\n                            <ItemsFilter />\r\n                        </div>\r\n                        <button className={classes.deleteAllButton} onClick={handleDeleteAll}>מחק הכל</button>\r\n                    </>\r\n                }\r\n                <div className={classes.list}>\r\n                    {\r\n                        !newTask && filtered.tasks.length === 0\r\n                        ? <div className={classes.titleItem}>\r\n                            אין משימות\r\n                        </div> \r\n                        : filtered.tasks.map((task: ITask, i: number) => <TaskItem key={i} data={task} onChange={handleTasksChange} />)\r\n                    }\r\n                    {\r\n                        newTask && <CreateTask onSubmit={handleTasksChange} onCancel={() => setNewTask(false)} />\r\n                    }\r\n                    {\r\n                        !newTask && filtered.filter !== 'משימות שהושלמו' && <button onClick={e => setNewTask(true)} className={classes.createButton}>משימה חדשה</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                !newTask && filtered.filter !== 'משימות שהושלמו' &&\r\n                <button className={classes.headerCreateButton} onClick={e => setNewTask(true)}>\r\n                    <AddIcon />\r\n                </button>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TasksList","import React from 'react';\nimport { makeStyles, Theme, useMediaQuery } from '@material-ui/core'\nimport clsx from 'clsx'\nimport './App.css';\nimport { ITask } from './db';\nimport TasksList from './components/TasksList';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down(600)]: {\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    }\n  },\n  wrapper: {\n    width: '600px',\n    boxShadow: '0 3px 5px rgba(0,0,0,.3)',\n    borderRadius: '10px',\n    overflow: 'hidden',\n    [theme.breakpoints.down(600)]: {\n      width: '100%',\n      height: '100%',\n      border: 0,\n      boxShadow: 'none',\n      borderRadius: 0,\n    }\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: '45px',\n    background: '#4197a8',\n    userSelect: 'none',\n    '& h1': {\n      fontSize: '1.345rem',\n      color: '#fff',\n      fontWeight: 500,\n      lineHeight: '100%',\n      padding: '6px 16px',\n      boxSizing: 'border-box',\n    },\n    [theme.breakpoints.down(600)]: {\n      height: '65px'\n    }\n  },\n  fixedHeader: {\n    position: 'fixed',\n    width: '100%',\n    zIndex: 1200,\n  },\n  body: {\n    position: 'relative',\n    height: 'calc(100% - 45px)',\n    [theme.breakpoints.down(600)]: {\n      height: 'calc(100% - 65px)',\n      marginTop: '65px'\n    }\n  },\n  footer: {}\n}))\n\nconst App: React.FC<{ data: ITask[] }> = ({ data }) => {\n  const classes = useStyles()\n  const [ tasks, setTasks ] = React.useState<ITask[]>(data)\n\n  const handleTasksChange = (newState: ITask[]) => {\n    setTasks(newState)\n  }\n\n  const ResponsiveHeader: React.FC<{ children: JSX.Element }> = ({ children }) => {\n    const smallScreen = useMediaQuery('(max-width: 600px)')\n    return (\n      <div className={clsx(classes.header, smallScreen && classes.fixedHeader)}>\n        { children }\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <ResponsiveHeader>\n          <h1 className=\"title\">משימות</h1>\n        </ResponsiveHeader>\n        <div className={classes.body}>\n          <TasksList tasks={tasks} onChange={handleTasksChange} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nexport interface ITask {\r\n    title: string\r\n    completed: boolean\r\n    date: Date\r\n    [key: string]: string | boolean | Date\r\n}\r\n\r\nexport default class LocalDatabase {\r\n    private tasks: ITask[] = []\r\n    constructor() {\r\n        this.init()\r\n    }\r\n\r\n    public getTasks() {\r\n        return this.tasks.sort((a: ITask, b: ITask) => +a.date - +b.date) as ITask[]\r\n    }\r\n\r\n    public getTask(key: 'title' | 'date', val: string) {\r\n        return this.tasks.find((task: ITask) => task[key] === val)\r\n    }\r\n\r\n    public createTask(task: ITask) {\r\n        this.tasks.push({ ...task, date: new Date() })\r\n        this.save()\r\n    }\r\n\r\n    public updateTask(task: ITask, update: any) {\r\n        const whiteList = [ 'title', 'completed' ]\r\n        Object.keys(update).map((key: string) => {\r\n            if (whiteList.includes(key)) {\r\n                this.tasks[this.tasks.indexOf(task)][key] = update[key]\r\n            }\r\n            return ''\r\n        })\r\n        this.save()\r\n    }\r\n\r\n    public deleteTask(task: ITask, save: boolean = true) {\r\n        const index: number = this.tasks.indexOf(task)\r\n        \r\n        if (index >= 0) {\r\n            this.tasks.splice(index,1)\r\n        }\r\n        if (save) this.save()\r\n    }\r\n\r\n    public deleteAll(tasks: ITask[] = []) {\r\n        tasks.forEach((task: ITask) => {\r\n            this.deleteTask(task, false)\r\n        })\r\n        this.save()\r\n    }\r\n\r\n    private reset() {\r\n        this.tasks = []\r\n        this.save()\r\n    }\r\n\r\n    private save() {\r\n        localStorage.setItem('tasks', JSON.stringify(this.tasks))\r\n    }\r\n\r\n    private init() {\r\n        const localData = JSON.parse(localStorage.getItem('tasks') || '[]')\r\n        this.tasks = localData\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport LocalDatabase from './db/index'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nexport const db = new LocalDatabase()\n\nconst theme = createMuiTheme({\n  direction: 'rtl'\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App data={db.getTasks()} />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}